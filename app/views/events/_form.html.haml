- parent_sheet(GroupSheet.new(self, @group, :group_event_path, :index_event))

%h2 Infos
= entry_form do |f|
  - if entry.new_record?
    = f.hidden_field :group_id
    = f.hidden_field :type

  = field_set_tag do
    = f.labeled_input_fields(*entry.used_attributes(:name, :number, :description, :motto, :cost, :location))
    = f.labeled_string_field :contact, data: {provide: 'person', id_field: 'event_contact_id'}
    = f.hidden_field :contact_id

    - entry.used_attributes(:state).each do |a|
      = f.labeled_belongs_to_field(:state, list: entry.state_collection)

    - entry.used_attributes(:kind_id).each do |a|
      = f.labeled_input_field(:kind_id)
      
  = render_extensions 'fields', locals: { f: f }

  %h2 Kursdaten
  = field_set_tag do
    %p Uhrzeiten sind optional
    = f.nested_fields_for :dates, 'event/dates/fields'

  %h2 Anmeldung
  = field_set_tag do
    = f.labeled_input_field(:application_opening_at, class: 'span1 date')
    = f.labeled_input_field(:application_closing_at, class: 'span1 date')
    = f.labeled_input_field(:application_conditions)
    = f.labeled_boolean_field(:priorization, caption: 'Teilnehmende können bei der Anmeldung zwei weitere Kurse als Alternativen angeben')
    = f.labeled_boolean_field(:requires_approval, caption: 'Scharleiter wird informiert und muss die Anmeldung bestätigen')
    = f.labeled_input_field(:maximum_participants, class: 'span1')
    
  %h2 Angaben für Anmeldung
  %p Du kannst weitere Angaben für die Anmeldung verlangen 
  = field_set_tag do
    = f.nested_fields_for :questions, 'event/questions/fields'
