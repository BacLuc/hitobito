
= standard_form(path_args(entry)) do |f|

  .btn-toolbar
    .btn-group
      = f.button('Suchen', class: 'btn btn-primary', value: 'search')
    - if can?(:create, entry)
      .btn-group
        = f.button('Suche speichern', class: 'btn btn-primary', value: 'save')
    = link_to(ti(:"button.cancel"), group_people_path(@group), class: 'link')
      
      
  = f.error_messages
  
  = field_set_tag('Welche Rollen sollen angezeigt werden?') do
    %p Je nach Suchbereich wird nur nach gewissen Rollen gesucht.
    - @role_types.each do |layer, groups|
      %h5= layer
      - groups.each do |group, role_types|
        = f.labeled nil, group do 
          - role_types.each do |role_type|
            = f.inline_check_box(:role_types, 
                                 role_type.sti_name, 
                                 role_type.model_name.human, 
                                 checked: entry.role_types.include?(role_type.sti_name))

  - if !@group.bottom?
    = field_set_tag('In welchem Bereich soll gesucht werden?') do
      = f.labeled :kind, '&nbsp;'.html_safe do
        = f.inline_radio_button(:kind, :deep, "Ãœberall - Auf der Ebene #{@group.layer_group.to_s} und allen darunter liegenden Ebenen suchen", false)
        = f.inline_radio_button(:kind, :layer, "Ebene - Nur auf der Ebene #{@group.layer_group.to_s} suchen", false)
  - else
    = f.hidden_field(:kind, value: :layer)
    
  - if can?(:create, entry)
    = field_set_tag('Filtern speichern') do
      = f.labeled_input_field :name, placeholder: 'Geben Sie einen Namen an, um diesen Filter zu speichern'
    
  .btn-toolbar
    .btn-group
      = f.button('Suchen', class: 'btn btn-primary', value: 'search')
    - if can?(:create, entry)
      .btn-group
        = f.button('Suche speichern', class: 'btn btn-primary', value: 'save')
    = link_to(ti(:"button.cancel"), group_people_path(@group), class: 'link')
      