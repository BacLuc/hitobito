#!/bin/bash
# This deploy hook gets executed after dependencies are resolved and the
# build hook has been run but before the application has been started back
# up again.  This script gets executed directly, so it could be python, php,
# ruby, etc.
#
# See http://docs.openshift.org/origin-m4/oo_cartridge_developers_guide.html#default-build-lifecycle

### define functions for this script 

source $OPENSHIFT_CARTRIDGE_SDK_BASH
source ${OPENSHIFT_RUBY_DIR}/lib/ruby_context

function store_env {
  export $1="$2"
  set_env_var $1 $2 $OPENSHIFT_HOMEDIR/.env/user_vars
}

function bundleExec {
  CMD="$@"
  echo $CMD
  (cd ${OPENSHIFT_REPO_DIR} && ruby_context "bundle exec $CMD") || exit 1
}

set -e

### configure environment

if [ ! -z "$OPENSHIFT_POSTGRESQL_DB_HOST" ]; then
  store_env 'RAILS_DB_ADAPTER' "postgresql"
  store_env 'RAILS_DB_NAME' "$OPENSHIFT_APP_NAME"
  store_env 'RAILS_DB_USERNAME' "$OPENSHIFT_POSTGRESQL_DB_USERNAME"
  store_env 'RAILS_DB_PASSWORD' "$OPENSHIFT_POSTGRESQL_DB_PASSWORD"
  store_env 'RAILS_DB_HOST' $OPENSHIFT_POSTGRESQL_DB_HOST
  store_env 'RAILS_DB_PORT' $OPENSHIFT_POSTGRESQL_DB_PORT
elif [ ! -z "$OPENSHIFT_MYSQL_DB_HOST" ]; then
  store_env 'RAILS_DB_ADAPTER' "mysql2"
  store_env 'RAILS_DB_NAME' $OPENSHIFT_APP_NAME
  store_env 'RAILS_DB_USERNAME' "$OPENSHIFT_MYSQL_DB_USERNAME"
  store_env 'RAILS_DB_PASSWORD' "$OPENSHIFT_MYSQL_DB_PASSWORD"
  store_env 'RAILS_DB_HOST' $OPENSHIFT_MYSQL_DB_HOST
  store_env 'RAILS_DB_PORT' $OPENSHIFT_MYSQL_DB_PORT
else
  echo 1>&2
  echo "Could not find the database cartridge.  Please run:" 1>&2
  echo "rhc cartridge add -a $OPENSHIFT_APP_NAME -c mysql-5.5" 1>&2
  echo "or"
  echo "rhc cartridge add -a $OPENSHIFT_APP_NAME -c postgresql-9.2" 1>&2
  echo "then make a sample commit (add whitespace somewhere) and re-push" 1>&2
  echo 1>&2
  exit 5
fi

store_env 'RAILS_ENV' 'production'
store_env 'RAILS_HOST_NAME' $OPENSHIFT_APP_DNS
store_env 'RAILS_SPHINX_HOST' $OPENSHIFT_SPHINX_HOST
store_env 'RAILS_SPHINX_PORT' $OPENSHIFT_SPHINX_PORT
store_env 'MEMCACHE_SERVERS' ${OPENSHIFT_MEMCACHED_HOST}:${OPENSHIFT_MEMCACHED_PORT}

# tune ruby gc
store_env 'RUBY_HEAP_MIN_SLOTS' 1800000
store_env 'RUBY_HEAP_FREE_MIN' 18000
store_env 'RUBY_HEAP_SLOTS_INCREMENT' 144000
store_env 'RUBY_HEAP_SLOTS_GROWTH_FACTOR' 1
store_env 'RUBY_GC_MALLOC_LIMIT' 60000000


ln -sf ${OPENSHIFT_REPO_DIR}/log/production.log ${OPENSHIFT_LOG_DIR}/rails.log
ln -sf ${OPENSHIFT_REPO_DIR}/log/delayed_job.log ${OPENSHIFT_LOG_DIR}/delayed_job.log


### run deployment tasks

bundleExec rake db:migrate db:seed wagon:setup -t

if [[ ( -f ${OPENSHIFT_REPO_DIR}/config/thinking_sphinx.yml ) ]]; then
  bundleExec rake ts:configure ts:index

  ln -s ${OPENSHIFT_REPO_DIR}/config/production.sphinx.conf ${OPENSHIFT_SPHINX_CONFIG_DIR}/sphinx.conf
fi
